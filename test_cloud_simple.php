<?php
echo "<h1>‚òÅÔ∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±–ª–∞—á–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤</h1>";

// –ü—Ä–æ–≤–µ—Ä–∫–∞ 1: Yandex Cloud Functions
echo "<h2>1. Yandex Cloud Functions</h2>";
$signalingUrl = 'https://functions.yandexcloud.net/d4ec0rusp5blvc9pucd4?action=status';

$context = stream_context_create([
    'http' => [
        'timeout' => 10,
        'method' => 'GET'
    ]
]);

$response = @file_get_contents($signalingUrl, false, $context);

if ($response !== false) {
    $data = json_decode($response, true);
    if ($data && isset($data['success']) && $data['success']) {
        echo "<p style='color: green;'>‚úÖ Yandex Cloud Functions –¥–æ—Å—Ç—É–ø–µ–Ω</p>";
        echo "<pre>" . json_encode($data, JSON_PRETTY_PRINT) . "</pre>";
    } else {
        echo "<p style='color: orange;'>‚ö†Ô∏è Yandex Cloud Functions –æ—Ç–≤–µ—á–∞–µ—Ç, –Ω–æ —Å –æ—à–∏–±–∫–æ–π</p>";
        echo "<pre>" . htmlspecialchars($response) . "</pre>";
    }
} else {
    echo "<p style='color: red;'>‚ùå Yandex Cloud Functions –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω</p>";
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ 2: TURN —Å–µ—Ä–≤–µ—Ä
echo "<h2>2. TURN —Å–µ—Ä–≤–µ—Ä VK Cloud</h2>";
$turnHost = '109.120.183.43';
$turnPort = 3478;

$connection = @fsockopen($turnHost, $turnPort, $errno, $errstr, 5);

if ($connection) {
    echo "<p style='color: green;'>‚úÖ TURN —Å–µ—Ä–≤–µ—Ä VK Cloud –¥–æ—Å—Ç—É–ø–µ–Ω ($turnHost:$turnPort)</p>";
    fclose($connection);
} else {
    echo "<p style='color: red;'>‚ùå TURN —Å–µ—Ä–≤–µ—Ä VK Cloud –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω ($turnHost:$turnPort)</p>";
    echo "<p>–û—à–∏–±–∫–∞: $errstr ($errno)</p>";
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ 3: STUN —Å–µ—Ä–≤–µ—Ä
echo "<h2>3. STUN —Å–µ—Ä–≤–µ—Ä Google</h2>";
$stunHost = 'stun.l.google.com';
$stunPort = 19302;

$connection = @fsockopen($stunHost, $stunPort, $errno, $errstr, 5);

if ($connection) {
    echo "<p style='color: green;'>‚úÖ STUN —Å–µ—Ä–≤–µ—Ä Google –¥–æ—Å—Ç—É–ø–µ–Ω ($stunHost:$stunPort)</p>";
    fclose($connection);
} else {
    echo "<p style='color: red;'>‚ùå STUN —Å–µ—Ä–≤–µ—Ä Google –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω ($stunHost:$stunPort)</p>";
    echo "<p>–û—à–∏–±–∫–∞: $errstr ($errno)</p>";
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ 4: –¢–µ—Å—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–∏–≥–Ω–∞–ª–∞
echo "<h2>4. –¢–µ—Å—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–∏–≥–Ω–∞–ª–∞</h2>";
$testSignal = [
    'action' => 'signal',
    'from' => 'test_user_1',
    'to' => 'test_user_2',
    'type' => 'test',
    'data' => ['message' => 'test signal from ' . date('Y-m-d H:i:s')]
];

$postData = json_encode($testSignal);

$context = stream_context_create([
    'http' => [
        'timeout' => 10,
        'method' => 'POST',
        'header' => 'Content-Type: application/json',
        'content' => $postData
    ]
]);

$response = @file_get_contents('https://functions.yandexcloud.net/d4ec0rusp5blvc9pucd4', false, $context);

if ($response !== false) {
    $data = json_decode($response, true);
    if ($data && isset($data['success']) && $data['success']) {
        echo "<p style='color: green;'>‚úÖ –°–∏–≥–Ω–∞–ª –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ</p>";
        echo "<pre>" . json_encode($data, JSON_PRETTY_PRINT) . "</pre>";
    } else {
        echo "<p style='color: orange;'>‚ö†Ô∏è –°–µ—Ä–≤–µ—Ä –≤–µ—Ä–Ω—É–ª –æ—à–∏–±–∫—É</p>";
        echo "<pre>" . htmlspecialchars($response) . "</pre>";
    }
} else {
    echo "<p style='color: red;'>‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–∏–≥–Ω–∞–ª–∞</p>";
}

echo "<h2>üéØ –†–µ–∑—É–ª—å—Ç–∞—Ç</h2>";
echo "<p>–ï—Å–ª–∏ –≤—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ, WebRTC –¥–æ–ª–∂–µ–Ω —Ä–∞–±–æ—Ç–∞—Ç—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.</p>";
echo "<p><a href='webrtc-demo-cloud.html'>–ü–µ—Ä–µ–π—Ç–∏ –∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—é WebRTC</a></p>";
?>
