/**
 * –ó–∞–≥—Ä—É–∑—á–∏–∫ –∏–º–µ–Ω –∏–∑ –∑–∞–ø–∏—Å–Ω–æ–π –∫–Ω–∏–∂–∫–∏ –¥–ª—è –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ –¥—Ä—É–∑—å—è –∏ —á–∞—Ç–æ–≤
 * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é —Ñ—É–Ω–∫—Ü–∏—é getContactName –∏–∑ contacts-handler.js
 */

/**
 * –ó–∞–≥—Ä—É–∂–∞–µ—Ç –∏–º—è –∏–∑ –∑–∞–ø–∏—Å–Ω–æ–π –∫–Ω–∏–∂–∫–∏ –¥–ª—è –∑–∞–≥–æ–ª–æ–≤–∫–∞ —á–∞—Ç–∞
 */
async function loadChatFriendName(friendUsername) {
    const chatFriendName = document.getElementById('chatFriendName');
    if (!chatFriendName) return;
    
    try {
        const contactName = await getContactName(friendUsername);
        if (contactName) {
            chatFriendName.textContent = contactName;
            console.log(`üë§ [CHAT] –ò–º—è –∏–∑ –∑–∞–ø–∏—Å–Ω–æ–π –∫–Ω–∏–∂–∫–∏: ${contactName}`);
        } else {
            console.log(`üë§ [CHAT] –ò–º—è –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ –∑–∞–ø–∏—Å–Ω–æ–π –∫–Ω–∏–∂–∫–µ –¥–ª—è ${friendUsername}`);
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–º–µ–Ω–∏ –∫–æ–Ω—Ç–∞–∫—Ç–∞ –¥–ª—è —á–∞—Ç–∞', friendUsername, error);
    }
}

/**
 * –ó–∞–≥—Ä—É–∂–∞–µ—Ç –∏–º–µ–Ω–∞ –∏–∑ –∑–∞–ø–∏—Å–Ω–æ–π –∫–Ω–∏–∂–∫–∏ –¥–ª—è –≤—Ö–æ–¥—è—â–∏—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
 */
async function loadRequestNames() {
    const requestsList = document.getElementById('requestsList');
    if (!requestsList) return;
    
    const requestNames = requestsList.querySelectorAll('.request-item .username[data-phone]');
    
    for (const nameElement of requestNames) {
        const phone = nameElement.getAttribute('data-phone');
        if (phone) {
            try {
                const contactName = await getContactName(phone);
                if (contactName) {
                    nameElement.textContent = `üë§ ${contactName}`;
                }
            } catch (error) {
                console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–º–µ–Ω–∏ –∫–æ–Ω—Ç–∞–∫—Ç–∞ –¥–ª—è', phone, error);
            }
        }
    }
}

/**
 * –ó–∞–≥—Ä—É–∂–∞–µ—Ç –∏–º–µ–Ω–∞ –∏–∑ –∑–∞–ø–∏—Å–Ω–æ–π –∫–Ω–∏–∂–∫–∏ –¥–ª—è –∏—Å—Ö–æ–¥—è—â–∏—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
 */
async function loadSentRequestNames() {
    const sentRequestsList = document.getElementById('sentRequestsList');
    if (!sentRequestsList) return;
    
    const sentRequestNames = sentRequestsList.querySelectorAll('.request-item .username[data-phone]');
    
    for (const nameElement of sentRequestNames) {
        const phone = nameElement.getAttribute('data-phone');
        if (phone) {
            try {
                const contactName = await getContactName(phone);
                if (contactName) {
                    nameElement.textContent = `üë§ ${contactName}`;
                }
            } catch (error) {
                console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–º–µ–Ω–∏ –∫–æ–Ω—Ç–∞–∫—Ç–∞ –¥–ª—è', phone, error);
            }
        }
    }
}

// –≠–∫—Å–ø–æ—Ä—Ç —Ñ—É–Ω–∫—Ü–∏–π –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª—è—Ö
if (typeof module !== 'undefined' && module.exports) {
    module.exports = {
        loadChatFriendName,
        loadRequestNames,
        loadSentRequestNames
    };
}
