// ===== PING-PONG –ú–û–ù–ò–¢–û–†–ò–ù–ì =====

// –ó–∞–ø—É—Å–∫ ping-–ø–æ–Ω–≥ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –¥–ª—è –¥—Ä—É–≥–∞
function startPingPongMonitoring(friendUsername) {
    if (pingIntervals[friendUsername]) {
        clearInterval(pingIntervals[friendUsername]);
    }
    
    pingIntervals[friendUsername] = setInterval(() => {
        sendPingToFriend(friendUsername);
    }, P2P_CONFIG.pingInterval);
    
    console.log(`üèì Ping-–ø–æ–Ω–≥ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∑–∞–ø—É—â–µ–Ω –¥–ª—è ${friendUsername}`);
}

// –û—Å—Ç–∞–Ω–æ–≤–∫–∞ ping-–ø–æ–Ω–≥ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –¥–ª—è –¥—Ä—É–≥–∞
function stopPingPongMonitoring(friendUsername) {
    if (pingIntervals[friendUsername]) {
        clearInterval(pingIntervals[friendUsername]);
        delete pingIntervals[friendUsername];
        console.log(`üèì Ping-–ø–æ–Ω–≥ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –¥–ª—è ${friendUsername}`);
    }
}

// –û—Ç–ø—Ä–∞–≤–∫–∞ ping –¥—Ä—É–≥—É
function sendPingToFriend(friendUsername) {
    if (p2pConnections[friendUsername] && p2pConnections[friendUsername].status === 'connected') {
        sendP2PMessage(friendUsername, {
            type: 'ping',
            to: friendUsername,
            timestamp: Date.now()
        });
        console.log(`üèì Ping –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –∫ ${friendUsername}`);
    }
}
