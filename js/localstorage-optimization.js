// ===== –û–ü–¢–ò–ú–ò–ó–ê–¶–ò–Ø LOCALSTORAGE =====

// –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è localStorage
function optimizeLocalStorage() {
    const keys = Object.keys(localStorage);
    const chatKeys = keys.filter(key => key.startsWith('chat_'));
    
    if (chatKeys.length > 50) {
        console.log(`üßπ –û—á–∏—â–∞–µ–º localStorage: –Ω–∞–π–¥–µ–Ω–æ ${chatKeys.length} —á–∞—Ç–æ–≤`);
        
        // –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –≤—Ä–µ–º–µ–Ω–∏ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –¥–æ—Å—Ç—É–ø–∞
        const sortedKeys = chatKeys.sort((a, b) => {
            const aTime = localStorage.getItem(a + '_lastAccess') || 0;
            const bTime = localStorage.getItem(b + '_lastAccess') || 0;
            return bTime - aTime;
        });
        
        // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ —á–∞—Ç—ã (–æ—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ 30 —Å–∞–º—ã—Ö –∞–∫—Ç–∏–≤–Ω—ã—Ö)
        const keysToDelete = sortedKeys.slice(30);
        keysToDelete.forEach(key => {
            localStorage.removeItem(key);
            localStorage.removeItem(key + '_lastAccess');
        });
        
        console.log(`‚úÖ –£–¥–∞–ª–µ–Ω–æ ${keysToDelete.length} —Å—Ç–∞—Ä—ã—Ö —á–∞—Ç–æ–≤ –∏–∑ localStorage`);
    }
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –∫ —á–∞—Ç—É
function updateChatLastAccess(chatId) {
    localStorage.setItem(chatId + '_lastAccess', Date.now().toString());
}
